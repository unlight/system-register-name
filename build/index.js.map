{"version":3,"file":"index.js","sourceRoot":"","sources":["..\\index.ts"],"names":[],"mappings":";AAAA,IAAM,MAAM,GAAG,6BAA6B,CAAC;AAC7C,IAAM,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACnD,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,eAAe,GAAG,UAAS,QAAgB,EAAE,OAAe;IACjE,MAAM,CAAC,UAAC,IAAY;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACxC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QACzB,MAAM,CAAC,MAAM,CAAC;IACf,CAAC,CAAC;AACH,CAAC,CAAC;AACF,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,4BAAmC,QAAgB,EAAE,OAAe,EAAE,QAAgB;IACrF,IAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACxC,0BAAS,EAAE,qBAAQ,CAAY;IACpC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACd,IAAM,WAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;aACjC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,EAAV,CAAU,CAAC;aACvB,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAjB,CAAiB,CAAC;aAC9B,GAAG,CAAC,UAAC,IAAY;YACjB,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,GAAG,WAAS,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC,CAAC;aACD,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,OAAI,IAAI,OAAG,EAAX,CAAW,CAAC;aACxB,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,UAAU,GAAG,WAAS,CAAC,QAAQ,CAAC,CAAC;QACrC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;QACnE,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,sBAAoB,UAAU,YAAO,SAAS,MAAG,CAAC,CAAC;IAC3F,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC;AACjB,CAAC;AArBe,0BAAkB,qBAqBjC,CAAA;AAAA,CAAC;AAEF;qBAAe,kBAAkB,CAAC","sourcesContent":["const mainRE = /System\\.register\\(\\[(.*?)\\]/;\nconst isRelativePath = require('is-relative-path');\nconst Path = require('path');\nconst createNormalize = function(filePath: string, srcRoot: string) {\n\treturn (name: string): string => {\n\t\tlet result = Path.resolve(filePath, name);\n\t\tresult = Path.relative(srcRoot, result);\n\t\tresult = unixify(result);\n\t\treturn result;\n\t};\n};\nconst trim = require('lodash.trim');\nconst unixify = require('unixify');\n\nexport function systemRegisterName(filePath: string, srcRoot: string, contents: string) {\n\tconst matches = contents.match(mainRE) || [];\n\tlet [fullMatch, nameList] = matches;\n\tif (nameList) {\n\t\tconst normalize = createNormalize(filePath, srcRoot);\n\t\tlet nameList2 = nameList.split(',')\n\t\t\t.map(name => trim(name))\n\t\t\t.map(name => trim(name, '\\'\"'))\n\t\t\t.map((name: string) => {\n\t\t\t\tif (isRelativePath(name)) {\n\t\t\t\t\tname = normalize(name);\n\t\t\t\t}\n\t\t\t\treturn name;\n\t\t\t})\n\t\t\t.map(name => `'${name}'`)\n\t\t\t.join(', ');\n\t\tlet moduleName = normalize(filePath);\n\t\tmoduleName = moduleName.slice(0, -Path.extname(moduleName).length);\n\t\tcontents = contents.replace(fullMatch, `System.register('${moduleName}', [${nameList2}]`);\n\t}\n\treturn contents;\n};\n\nexport default systemRegisterName;\n"]}